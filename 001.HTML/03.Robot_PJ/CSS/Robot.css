@charset "utf-8";

/* 로봇 PJ 메인 CSS - Robot.css */

/* 초기화 */
html,body,h1,h2,p,ol,ul{
    margin: 0;
    padding: 0;
}

/*********************************** 공통 클래스 ***********************************/

/* 메탈 소재1 배경 */
.mt1{
    background: url(../images/metal01.jpg) no-repeat center/cover;
}
/* 메탈 소재2 배경 */
.mt2{
    background: url(../images/metal02.jpg) no-repeat center/cover;
}


body{
    background: url(../images/bg.jpg) no-repeat fixed top/cover;
    margin-top: -150px;
}

/* 코딩 중에 가독성을 위한 임시 표시 */
body *{
    /* outline: 2px dashed yellow; */
}

/*********************************** 1. 상단 영역 ***********************************/

/* 1-1. 로고 */
/* 1-2. 링크 타이틀 */
/* 1-3. 탑 이동 버튼 */

/*********************************** 2. 메인 영역 ***********************************/

/***************
2-1. 로봇 박스
***************/
.robx{
    padding: 200px 0 400px;
}
/***** 2-1-1. 로봇 머리 *****/
.head{
    /* 하위 div들을 위한 부모 자격 부여 */
    position: relative;
    z-index: 1;

    width: 100px;
    height: 100px;
    margin: 0 auto;
    
}
/* 로봇 머리 직계 하위 div는 모두 앱솔루트 */
.head>div{
    position: absolute;
}
/* 각진 턱을 만들어주기 */
.head::before{
    content: '';
    display: block;
    position: absolute;
    /* 이때 부모는 .head */
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background: url(../images/metal01.jpg) no-repeat center/cover;
    clip-path: polygon(0 0,0 50%,15% 75%,25% 85%,50% 100%,75% 85%,85% 75%,100% 50%,100% 0);
    
}
/* 로봇 머리에 가상요소로 머리털 박스 만들기 */
.head::after{
    content: '';
    display: block;
    position: absolute;
    /* 이때 부모는 .head */
    top: -35px;
    left: -50px;
    width: 200px;
    height: 220px;
    background: url(../images/hair01.png) no-repeat center/100% 100%;
}

/* 2-1-1. 눈 공통 클래스 */
.eye{
    width: 20px;
    height: 20px;

    /* 배경 공통 */
    background-color: #fff;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100% 100%;

    /* 둥근 모서리 */
    border-radius: 50%;
    border: 1px solid rgb(255, 172, 172);
}
/* 2-1-1. 왼쪽 눈 */
.L_eye{
    background-image: url(../images/eye-L.png);
    top: 27px;
    left: 20px;
}
/* 2-1-1. 오른쪽 눈 */
.R_eye{
    top: 33px;
    right: 23px;
    background-image: url(../images/eye-R.png);
}
/* 눈물점으로 별 박아보기 */
.R_eye::before{
    content: '';
    display: block;
    position: absolute;
    /* 부모는? R_eye */
    top: 15px;
    right: -8px;
    width: 10px;
    height: 10px;
    background-color: red;

    /* 클리핑으로 별 만들기 */
    clip-path: polygon(50% 0,63% 37%,100% 37%,70% 62%,80% 100%,50% 77%,20% 100%,30% 62%,0 37%,37% 37%);

    /* 
    [ css 클리핑 속성 ]
    -> clip-path (cpp) : polygon(x1 y1,x2 y2, ...)
    -> 각 좌표위치는 띄어쓰기로 구분, 각 점은 콤마로 구분한다.
    -> 각 점을 연결하는 도형을 출력
    -> px는 각 도형의 크기를 수치로 쓰고
    -> %는 도형을 기준한 위치를 사용한다.
    */
}

/* 2-1-1. 귀 공통 클래스 */
.ear{
    top: 30px;
    width: 10px;
    height: 20px;
}
/* 2-1-1. 왼쪽 귀 */
.L_ear{
    left: -5px;
    border-radius: 35px 0 0 60px;
}
/* 2-1-1. 오른쪽 귀 */
.R_ear{
    right: -5px;
    border-radius: 0 35px 60px 0;
}

/* 2-1-1. 코 */
.nose{
    width: 10px;
    height: 15px;
    background-color: rgb(255, 226, 212);
    /* background: url(../images/nose.jpg) no-repeat 0/110% 100%; */
    clip-path: polygon(50% 0,0 100%,100% 100%);
    top: 50%;
    left: calc(50% - 5px);
}

/* 2-1-1. 입 */
.mouth{
    width: 40px;
    height: 20px;
    background: url(../images/mouth.png) no-repeat 0/100% 100%;
    top: 65%;
    left: calc(50% - 20px);
}

/***************
2-2. 로봇 몸통
***************/
.body{
    position: relative;
    /* 하위 div들을 위한 부모 자격 부여 */
    z-index: -2;
    width: 100px;
    height: 400px;
    margin: 10px auto 0;
    
    /* clip-path: polygon(0 0,100% 0,90% 50%,100% 100%,0 100%,10% 50%);
    overflow: none; 
    클리핑으로 개미 허리를 만들려고 했지만 클리핑을 하면 기본으로 오버플로우 히든 기능이 있어서 팔 다리가 전부 가려진다.
    오버플로우 논을 입력해도 풀리지 않는다. */
}
/* 로봇 몸통 직계 하위 div는 모두 앱솔루트 */
.body>div{
    position: absolute;
}

/* 개미허리를 body에서 만들 수 없었으니 body의 width 값을 200에서 좀 줄이고 가상요소로 위에 덧붙이자. */
/* 몸통 가상요소로 상단만들기 */
.body::before{
    content: '';
    display: block;
    position: absolute;
    /* z-index: -1; */
    left: -50px;
    width: 200px;
    height: 200px;
    /* 그라데이션 */
    background-image: 
    linear-gradient(-45deg,#ffc8f0, #ff8c8c,#ff5a5a,#ff8769);
    /* 몸깍기 */
    clip-path: 
    polygon(0 0,2% 10%,4% 30%,5% 50%,12% 65%,15% 75%,17% 80%,25% 100%,75% 100%,83% 80%,85% 75%,88% 65%,95% 50%,96% 30%,98% 10%,100% 0);
}

/* 몸통 가상요소로 하단만들기 */
.body::after{
    content: '';
    display: block;
    position: absolute;
    /* z-index: -1; */
    bottom: 0;
    left: -50px;
    width: 200px;
    height: 150px;
    /* 그라데이션 */
    background-image:
    linear-gradient(-20deg,rgb(75, 75, 160), rgb(45, 45, 100),rgb(35, 35, 80),rgb(80, 80, 180));
    
    /* 몸깍기 */
    clip-path: 
    polygon(50px 0,15px 15px,0 50px,5px 85px,6px 90px,10% 100%,90% 100%,194px 90px,195px 85px,100% 50px,185px 15px,150px 0);
}

/* 2-2-1. 목 */
.neck{
    top: -25px;
    left: 35px;
    width: 30px;
    height: 40px;
    border-radius: 0 0 20px 20px;
}

/* 2-2-1. 어깨 공통 클래스 */
.shd{
    width: 40px;
    height: 50px;
}
/* 2-2-1. 왼어깨 */
.L_shd{
    left: -90px;
    transform-origin: right top;
    transform: rotate(346deg);
    border-radius: 20px 0 20px 20px;
}
/* 2-2-1. 오른어깨 */
.R_shd{
    left: 150px;
    transform-origin: left top;
    transform: rotate(14deg);
    border-radius: 0 20px 20px 20px;
}

/* 2-2-1. 팔 공통 클래스 */
.arm{
    width: 40px;
    height: 150px;
    z-index: -1;
    border-radius: 15px 15px 5px 5px;
    transform-origin: center 20px;
}
/* 공통 팔에 가상 요소로 팔꿈치 만들기 */
.arm::before,
.arm::after{
    content: '';
    display: block;
    position: absolute;
    z-index: 1;
    bottom: -12%;
    width: 36px;
    height: 36px;
    border: 2px solid #ff8c8c;
    border-radius: 50%;
    background-color: #ccc;
}
/* 팔꿈치에 원형 그라데이션으로 입체감 살리기 */
.arm::after{
    transform: scale(.8);
    /* 선형 그라데이션 */
    background-image: linear-gradient(-45deg,#222 10%,#ccc 60%,#eee);
}
/* 팔 하단 구현 */
.arm span{
    position: absolute;
    /* 부모는? arm */
    left: 3px;
    top: 150px;
    width: 34px;
    height: 120px;
    border-radius: 5px 5px 15px 15px;
}
/* 공통 팔 하단에 가상 요소로 손 공간 만들기 */
.arm span::after{
    content: '';
    display: block;
    position: absolute;
    bottom: -80px;
    width: 50px;
    height: 80px;
    /* outline: 1px solid red; */
}
/* 2-2-1. 왼팔 */
.L_arm{
    top: 10px;
    left: -85px;
    transform: rotate(30deg);
}
/* 왼팔 하단 */
.L_arm span{
    transform: rotate(270deg);
    transform-origin: center 0;
}
/* 왼 손 */
.L_arm span::after{
    background: url(../images/hand_left.png) no-repeat top/100%;
    left: -5px;
}
/* 2-2-1. 오른팔 */
.R_arm{
    top: 10px;
    left: 145px;
    transform: rotate(350deg);
    /* transform: rotateX(180deg); */
}
/* 오른팔 하단 */
.R_arm span{
    transform: rotate(350deg);
    /* transform: rotateX(40deg); */
    transform-origin: center 0;
}
/* 오른 손 */
.R_arm span::after{
    background: url(../images/hand_right.png) no-repeat top/100%;
    left: -12px;
}

/* 2-2-1. 다리 공통 클래스 */
.leg{
    top: 90%;
    width: 80px;
    height: 220px;
    border: 1px solid rgb(255, 229, 182);
}
/* 공통 다리에 가상 요소로 무릎 만들기 */
.leg::before,
.leg::after{
    content: '';
    display: block;
    position: absolute;
    bottom: -25px;
    z-index: 1;
    width: 50px;
    height: 50px;
    background-color: #ccc;
    border-radius: 15px;
    border: 2px solid #444;
    /* 트랜스폼 : 먼저x축 축소하고 회전
    -> 무엇을 먼저했느냐에 따라 결과 달라짐! */
    transform: scaleX(.8) rotate(45deg);
}
/* 무릎에 원형 그라데이션으로 입체감 살리기 */
.leg::after{
    transform: scale(.65,.8) rotate(45deg);
    /* 선형 그라데이션 */
    background-image: linear-gradient(-45deg,#222 10%,#ccc 60%,#eee);
}
/* 공통 다리 하단 구현 */
.leg span{
    position: absolute;
    top: 100%;
    /* 부모는? .leg */
    width: 50px;
    height: 180px;
    border-radius: 25% 25% 80% 80%;
}
/* 공통 다리 하단에 가상 요소로 발 만들기 */
.leg span::after{
    content: '';
    display: block;
    position: absolute;
    bottom: -20px;
    left: 10px;
    width: 30px;
    height: 40px;
    background-color: #ffebc8;
    border-radius: 40px 40px 0 0;
    border: 4px solid #ff6464;
    border-bottom: 20px solid #ff6464;
    box-sizing: border-box;
}
/* 2-2-1. 왼쪽 다리 */
.L_leg{
    left: -32px;
    border-radius: 30% 30% 40% 60%;
}
.L_leg::before,
.L_leg::after{
    left: 18px;
}
.L_leg span{
    left: 20px;
}
/* 2-2-1. 오른쪽 다리 */
.R_leg{
    right: -32px;
    border-radius: 30% 30% 60% 40%;
}
.R_leg::before,
.R_leg::after{
    right: 18px;
}
.R_leg span{
    right: 20px;
}
/* 2-2-1. TV */
/*********************************** 3. 하단 영역 ***********************************/

